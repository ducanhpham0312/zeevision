# This directive is used to alter generated code.
directive @goField(
  # Force the generation of a resolver for this field.
  forceResolver: Boolean
  # The name of the field in the Go struct.
  name: String
  # Specify is this field is nullable.
  omittable: Boolean
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

# Root level query type.
type Query {
  processes: [Process!]!
  process(processKey: Int!): Process
  instances: [Instance!]!
  instance(instanceKey: Int!): Instance
  incidents: [Incident!]!
  jobs: [Job!]!
}

type Process {
  activeInstances: Int!
  completedInstances: Int!
  bpmnLiveStatus: String!
  bpmnResource: String! @goField(forceResolver: true)
  bpmnProcessId: String!
  deploymentTime: DateTime!
  instances: [Instance!]! @goField(forceResolver: true)
  processKey: Int!
  version: Int!
}

type Instance {
  bpmnLiveStatus: String!
  startTime: DateTime!
  endTime: DateTime
  instanceKey: Int!
  processKey: Int!
  version: Int!
  status: String!
  incidents: [Incident!]! @goField(forceResolver: true)
  jobs: [Job!]! @goField(forceResolver: true)
  variables: [Variable!]! @goField(forceResolver: true)
  process: Process! @goField(forceResolver: true)
}

type Incident {
  incidentKey: Int!
  instanceKey: Int!
  elementId: String!
  errorType: String!
  errorMessage: String!
  state: String!
  time: DateTime!
  instance: Instance! @goField(forceResolver: true)
}

type Job {
  elementId: String!
  instanceKey: Int!
  key: Int!
  type: String!
  retries: Int!
  worker: String!
  state: String!
  time: DateTime!
  instance: Instance! @goField(forceResolver: true)
}

type Variable {
  name: String!
  value: String!
  time: DateTime!
}

# The `DateTime` scalar type represents a date and time following the
# ISO 8601 standard. Example: "2000-01-01T12:00:00Z".
scalar DateTime
