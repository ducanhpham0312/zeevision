import * as domTestingLibrary from '@testing-library/dom';
import _userEventObj from '@testing-library/user-event';

declare const buildQueries: typeof domTestingLibrary.buildQueries;
declare const configure: typeof domTestingLibrary.configure;
declare const createEvent: domTestingLibrary.CreateObject & domTestingLibrary.CreateFunction;
declare const findAllByAltText: typeof domTestingLibrary.findAllByAltText;
declare const findAllByDisplayValue: typeof domTestingLibrary.findAllByDisplayValue;
declare const findAllByLabelText: typeof domTestingLibrary.findAllByLabelText;
declare const findAllByPlaceholderText: typeof domTestingLibrary.findAllByPlaceholderText;
declare const findAllByRole: typeof domTestingLibrary.findAllByRole;
declare const findAllByTestId: typeof domTestingLibrary.findAllByTestId;
declare const findAllByText: typeof domTestingLibrary.findAllByText;
declare const findAllByTitle: typeof domTestingLibrary.findAllByTitle;
declare const findByAltText: typeof domTestingLibrary.findByAltText;
declare const findByDisplayValue: typeof domTestingLibrary.findByDisplayValue;
declare const findByLabelText: typeof domTestingLibrary.findByLabelText;
declare const findByPlaceholderText: typeof domTestingLibrary.findByPlaceholderText;
declare const findByRole: typeof domTestingLibrary.findByRole;
declare const findByTestId: typeof domTestingLibrary.findByTestId;
declare const findByText: typeof domTestingLibrary.findByText;
declare const findByTitle: typeof domTestingLibrary.findByTitle;
declare const fireEvent: domTestingLibrary.FireFunction & domTestingLibrary.FireObject;
declare const getAllByAltText: typeof domTestingLibrary.getAllByAltText;
declare const getAllByDisplayValue: typeof domTestingLibrary.getAllByDisplayValue;
declare const getAllByLabelText: typeof domTestingLibrary.getAllByLabelText;
declare const getAllByPlaceholderText: typeof domTestingLibrary.getAllByPlaceholderText;
declare const getAllByRole: typeof domTestingLibrary.getAllByRole;
declare const getAllByTestId: typeof domTestingLibrary.getAllByTestId;
declare const getAllByText: typeof domTestingLibrary.getAllByText;
declare const getAllByTitle: typeof domTestingLibrary.getAllByTitle;
declare const getByAltText: typeof domTestingLibrary.getByAltText;
declare const getByDisplayValue: typeof domTestingLibrary.getByDisplayValue;
declare const getByLabelText: typeof domTestingLibrary.getByLabelText;
declare const getByPlaceholderText: typeof domTestingLibrary.getByPlaceholderText;
declare const getByRole: typeof domTestingLibrary.getByRole;
declare const getByTestId: typeof domTestingLibrary.getByTestId;
declare const getByText: typeof domTestingLibrary.getByText;
declare const getByTitle: typeof domTestingLibrary.getByTitle;
declare const getConfig: typeof domTestingLibrary.getConfig;
declare const getDefaultNormalizer: typeof domTestingLibrary.getDefaultNormalizer;
declare const getElementError: typeof domTestingLibrary.getElementError;
declare const getNodeText: typeof domTestingLibrary.getNodeText;
declare const getQueriesForElement: typeof domTestingLibrary.getQueriesForElement;
declare const getRoles: typeof domTestingLibrary.getRoles;
declare const getSuggestedQuery: typeof domTestingLibrary.getSuggestedQuery;
declare const isInaccessible: typeof domTestingLibrary.isInaccessible;
declare const logDOM: typeof domTestingLibrary.logDOM;
declare const logRoles: typeof domTestingLibrary.logRoles;
declare const prettyDOM: typeof domTestingLibrary.prettyDOM;
declare const queries: typeof domTestingLibrary.queries;
declare const queryAllByAltText: typeof domTestingLibrary.queryAllByAltText;
declare const queryAllByAttribute: domTestingLibrary.AllByAttribute;
declare const queryAllByDisplayValue: typeof domTestingLibrary.queryAllByDisplayValue;
declare const queryAllByLabelText: typeof domTestingLibrary.queryAllByLabelText;
declare const queryAllByPlaceholderText: typeof domTestingLibrary.queryAllByPlaceholderText;
declare const queryAllByRole: typeof domTestingLibrary.queryAllByRole;
declare const queryAllByTestId: typeof domTestingLibrary.queryAllByTestId;
declare const queryAllByText: typeof domTestingLibrary.queryAllByText;
declare const queryAllByTitle: typeof domTestingLibrary.queryAllByTitle;
declare const queryByAltText: typeof domTestingLibrary.queryByAltText;
declare const queryByAttribute: domTestingLibrary.QueryByAttribute;
declare const queryByDisplayValue: typeof domTestingLibrary.queryByDisplayValue;
declare const queryByLabelText: typeof domTestingLibrary.queryByLabelText;
declare const queryByPlaceholderText: typeof domTestingLibrary.queryByPlaceholderText;
declare const queryByRole: typeof domTestingLibrary.queryByRole;
declare const queryByTestId: typeof domTestingLibrary.queryByTestId;
declare const queryByText: typeof domTestingLibrary.queryByText;
declare const queryByTitle: typeof domTestingLibrary.queryByTitle;
declare const queryHelpers: typeof domTestingLibrary.queryHelpers;
declare const screen: domTestingLibrary.Screen<typeof domTestingLibrary.queries>;
declare const waitFor: typeof domTestingLibrary.waitFor;
declare const waitForElementToBeRemoved: typeof domTestingLibrary.waitForElementToBeRemoved;
declare const within: typeof domTestingLibrary.getQueriesForElement;
declare const prettyFormat: typeof domTestingLibrary.prettyFormat;
declare const userEvent: typeof _userEventObj;

export { buildQueries, configure, createEvent, findAllByAltText, findAllByDisplayValue, findAllByLabelText, findAllByPlaceholderText, findAllByRole, findAllByTestId, findAllByText, findAllByTitle, findByAltText, findByDisplayValue, findByLabelText, findByPlaceholderText, findByRole, findByTestId, findByText, findByTitle, fireEvent, getAllByAltText, getAllByDisplayValue, getAllByLabelText, getAllByPlaceholderText, getAllByRole, getAllByTestId, getAllByText, getAllByTitle, getByAltText, getByDisplayValue, getByLabelText, getByPlaceholderText, getByRole, getByTestId, getByText, getByTitle, getConfig, getDefaultNormalizer, getElementError, getNodeText, getQueriesForElement, getRoles, getSuggestedQuery, isInaccessible, logDOM, logRoles, prettyDOM, prettyFormat, queries, queryAllByAltText, queryAllByAttribute, queryAllByDisplayValue, queryAllByLabelText, queryAllByPlaceholderText, queryAllByRole, queryAllByTestId, queryAllByText, queryAllByTitle, queryByAltText, queryByAttribute, queryByDisplayValue, queryByLabelText, queryByPlaceholderText, queryByRole, queryByTestId, queryByText, queryByTitle, queryHelpers, screen, userEvent, waitFor, waitForElementToBeRemoved, within };
