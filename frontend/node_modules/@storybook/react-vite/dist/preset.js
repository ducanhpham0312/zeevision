"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __esm=(fn,res)=>function(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);function actualNameHandler(documentation,path2,importer){if(import_ast_types.namedTypes.ClassDeclaration.check(path2.node)||import_ast_types.namedTypes.FunctionDeclaration.check(path2.node))documentation.set("actualName",(0,import_utils.getNameOrValue)(path2.get("id")));else if(import_ast_types.namedTypes.ArrowFunctionExpression.check(path2.node)||import_ast_types.namedTypes.FunctionExpression.check(path2.node)||(0,import_utils.isReactForwardRefCall)(path2,importer)){let currentPath=path2;for(;currentPath.parent;){if(import_ast_types.namedTypes.VariableDeclarator.check(currentPath.parent.node)){documentation.set("actualName",(0,import_utils.getNameOrValue)(currentPath.parent.get("id")));return}if(import_ast_types.namedTypes.AssignmentExpression.check(currentPath.parent.node)){let leftPath=currentPath.parent.get("left");if(import_ast_types.namedTypes.Identifier.check(leftPath.node)||import_ast_types.namedTypes.Literal.check(leftPath.node)){documentation.set("actualName",(0,import_utils.getNameOrValue)(leftPath));return}}currentPath=currentPath.parent}documentation.set("actualName","")}}var import_ast_types,import_utils,init_actualNameHandler=__esm({"src/plugins/docgen-handlers/actualNameHandler.ts"(){"use strict";import_ast_types=require("ast-types"),import_utils=require("react-docgen/dist/utils")}});var react_docgen_exports={};__export(react_docgen_exports,{reactDocgen:()=>reactDocgen});function reactDocgen({include=/\.(mjs|tsx?|jsx?)$/,exclude=[/node_modules\/.*/]}={}){let cwd=process.cwd(),filter=(0,import_pluginutils.createFilter)(include,exclude);return{name:"storybook:react-docgen-plugin",enforce:"pre",async transform(src,id){let relPath=import_path.default.relative(cwd,id);if(filter(relPath))try{let docgenResults=(0,import_react_docgen.parse)(src,defaultResolver,handlers,{importer:defaultImporter,filename:id}),s=new import_magic_string.default(src);return docgenResults.forEach(info=>{let{actualName,...docgenInfo}=info;if(actualName){let docNode=JSON.stringify(docgenInfo);s.append(`;${actualName}.__docgenInfo=${docNode}`)}}),{code:s.toString(),map:s.generateMap()}}catch{}}}}var import_path,import_pluginutils,import_react_docgen,import_magic_string,defaultHandlers,defaultResolver,defaultImporter,handlers,init_react_docgen=__esm({"src/plugins/react-docgen.ts"(){"use strict";import_path=__toESM(require("path")),import_pluginutils=require("@rollup/pluginutils"),import_react_docgen=require("react-docgen"),import_magic_string=__toESM(require("magic-string"));init_actualNameHandler();defaultHandlers=Object.values(import_react_docgen.handlers).map(handler=>handler),defaultResolver=import_react_docgen.resolver.findAllExportedComponentDefinitions,defaultImporter=import_react_docgen.importers.makeFsImporter(),handlers=[...defaultHandlers,actualNameHandler]}});var preset_exports={};__export(preset_exports,{core:()=>core,viteFinal:()=>viteFinal});module.exports=__toCommonJS(preset_exports);var import_builder_vite=require("@storybook/builder-vite"),import_path2=require("path"),getAbsolutePath=input=>(0,import_path2.dirname)(require.resolve((0,import_path2.join)(input,"package.json"))),core={builder:getAbsolutePath("@storybook/builder-vite"),renderer:getAbsolutePath("@storybook/react")},viteFinal=async(config,{presets})=>{let{plugins=[]}=config;if(!await(0,import_builder_vite.hasVitePlugins)(plugins,["vite:react-babel","vite:react-swc"])){let{default:react}=await import("@vitejs/plugin-react");plugins.push(react())}let{reactDocgen:reactDocgenOption,reactDocgenTypescriptOptions}=await presets.apply("typescript",{}),typescriptPresent;try{require.resolve("typescript"),typescriptPresent=!0}catch{typescriptPresent=!1}if(reactDocgenOption==="react-docgen-typescript"&&typescriptPresent&&plugins.push(require("@joshwooding/vite-plugin-react-docgen-typescript")({...reactDocgenTypescriptOptions,savePropValueAsString:!0})),typeof reactDocgenOption=="string"){let{reactDocgen:reactDocgen2}=await Promise.resolve().then(()=>(init_react_docgen(),react_docgen_exports));plugins.unshift(reactDocgen2({include:reactDocgenOption==="react-docgen"?/\.(mjs|tsx?|jsx?)$/:/\.(mjs|jsx?)$/}))}return config};0&&(module.exports={core,viteFinal});
