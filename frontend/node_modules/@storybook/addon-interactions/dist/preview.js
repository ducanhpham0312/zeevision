var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var preview_exports={};__export(preview_exports,{argsEnhancers:()=>argsEnhancers,parameters:()=>parameters,runStep:()=>runStep});module.exports=__toCommonJS(preview_exports);var import_preview_api=require("@storybook/preview-api"),import_global=require("@storybook/global"),import_core_events=require("@storybook/core-events"),import_instrumenter=require("@storybook/instrumenter"),import_jest_mock=require("jest-mock"),JestMock=new import_jest_mock.ModuleMocker(import_global.global),fn=JestMock.fn.bind(JestMock),{action}=(0,import_instrumenter.instrument)({action:fn},{retain:!0}),channel=import_preview_api.addons.getChannel(),seen=new Set,spies=[];channel.on(import_core_events.FORCE_REMOUNT,()=>spies.forEach(mock=>{var _a;return(_a=mock==null?void 0:mock.mockClear)==null?void 0:_a.call(mock)}));channel.on(import_core_events.STORY_RENDER_PHASE_CHANGED,({newPhase})=>{newPhase==="loading"&&spies.forEach(mock=>{var _a;return(_a=mock==null?void 0:mock.mockClear)==null?void 0:_a.call(mock)})});var addSpies=(id,val,key)=>{if(seen.has(val))return val;seen.add(val);try{if(Object.prototype.toString.call(val)==="[object Object]"){for(let[k,v]of Object.entries(val))val[k]=addSpies(id,v,k);return val}if(Array.isArray(val))return val.map((item,index)=>addSpies(id,item,`${key}[${index}]`));if(typeof val=="function"&&val.isAction){Object.defineProperty(val,"name",{value:key,writable:!1}),Object.defineProperty(val,"__storyId__",{value:id,writable:!1});let spy=action(val);return spies.push(spy),spy}}catch{}return val},addActionsFromArgTypes=({id,initialArgs})=>addSpies(id,initialArgs),argsEnhancers=[addActionsFromArgTypes],{step:runStep}=(0,import_instrumenter.instrument)({step:(label,play,context)=>play(context)},{intercept:!0}),parameters={throwPlayFunctionExceptions:!1};0&&(module.exports={argsEnhancers,parameters,runStep});
