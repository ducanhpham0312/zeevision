---
name: Backend

# yamllint disable-line rule:truthy
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  format-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"

      - name: Get all Go files
        working-directory: ./backend
        run: |
          {
            echo 'GOFILES<<EOF'
            find . -name '*.go' -type f -not -path "./vendor/*"
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Get all unformatted Go files
        working-directory: ./backend
        run: |
          {
            echo 'UNFORMATTED_FILES<<EOF'
            gofmt -l $GOFILES
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Check formatting of Go files
        run: |
          test -z "$UNFORMATTED_FILES" || {
            echo "$UNFORMATTED_FILES" | while read -r filename
            do
                echo "::error file=$filename::Missing gofmt"
            done
            exit 1
          }

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"

      - name: Run tests
        working-directory: ./backend
        run: go test -v ./...
